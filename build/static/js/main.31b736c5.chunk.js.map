{"version":3,"sources":["login.js","TodoList.js","TodoAddForm.js","TodoHeader.js","todoapp.js","greet.js","loginControl.js","App.js","reportWebVitals.js","index.js"],"names":["styleArgument","Login","TextField","required","id","label","defaultValue","variant","color","style","type","autoComplete","TodoList","handleChange","event","updateTodo","props","todoItems","currentTarget","name","value","console","log","updateTodos","index","toggleCheckbox","checked","className","this","isCompleted","onChange","todo","onClick","removeToDoItem","React","Component","TodoForm","todoRef","createRef","addItemOnList","e","preventDefault","todoItem","current","addToDoItems","reset","onSubmit","ref","TodoTitle","Todoapp","state","item","items","Date","now","setState","todos","key","updatedTodo","TodoAddForm","Object","keys","map","Todo","initItems","UserGreeting","GuestGreeting","Greeting","isLoggedIn","ReactDOM","render","document","getElementById","LoginButton","Button","Link","LogoutButton","LoginControl","handleLoginClick","bind","handleLogoutClick","button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.31b736c5.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styleArgument = {};\r\n\r\nconst Login=()=>{\r\n  return (\r\n    <div>\r\n      <form>  \r\n      <br></br>\r\n      <TextField\r\n          required\r\n          id=\"outlined-email\"\r\n          label=\"Email Address\"\r\n          defaultValue=\"B0829000@cgu.edu.tw\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          style = {styleArgument}\r\n        />\r\n        <p></p>\r\n        <TextField\r\n          required\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n        />\r\n        <p></p>\r\n        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default Login;\r\n\r\n","import React from \"react\";\r\n\r\nclass TodoList extends React.Component {\r\n  handleChange = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    console.log(event.currentTarget.value);\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  toggleCheckbox = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.checked\r\n    };\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isCompleted\"\r\n          checked={this.props.todoItems.isCompleted}\r\n          onChange={this.toggleCheckbox}\r\n          // checked={this.props.todoItems.isChecked}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          value={this.props.todoItems.todo}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* <button>Edit</button> */}\r\n        <button\r\n          className=\"del-btn\"\r\n          onClick={() => this.props.removeToDoItem(this.props.index)}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n/*import React from \"react\";\r\nimport TodoListItem from \"./TodoItem\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default class TodoList extends React.Component {\r\n    render() {\r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <TodoListItem\r\n            key={index}\r\n            item={item}\r\n            index={index}\r\n            removeItem={this.props.removeItem}\r\n            TodoDone={this.props.TodoDone}\r\n          />\r\n        );\r\n      });\r\n      return <ul className=\"list-group\"> {items} </ul>;\r\n    }\r\n  }*/","import React from \"react\";\r\n\r\nclass TodoForm extends React.Component {\r\n  todoRef = React.createRef();\r\n\r\n  addItemOnList = e => {\r\n    e.preventDefault();\r\n    const todoItem = {\r\n      todo: this.todoRef.current.value,\r\n      isCompleted: false\r\n    };\r\n    this.props.addToDoItems(todoItem);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\r\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\r\n        <button>submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React from \"react\";\r\n\r\nexport default class AddForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    //this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({value:event.target.value});\r\n  }\r\n  handleSubmit(event) {\r\n    isCompleted:false\r\n    event.preventDefault();\r\n    var newItemValue = this.refs.itemName.value;\r\n    if(newItemValue) {\r\n      this.props.addItem({newItemValue});\r\n      this.refs.form.reset();\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n        <form ref=\"form\" onSubmit ={this.handleSubmit}>\r\n          <input type=\"text\" ref=\"itemName\" className=\"add-todo\" placeholder= \"add a new todo...\" \r\n          value={this.state.value} onChange={this.handleChange} />\r\n          <input type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n      /*<form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\">\r\n        <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"add a new todo\"/>\r\n        <button type=\"submit\" className=\"btn btn-default\">Submit</button> \r\n      </form>\r\n    );   \r\n  }\r\n} */","import React, { Component } from 'react';\r\n\r\n\r\nclass TodoTitle extends Component {\r\n    render () {\r\n        return <h1>CGU Todo list</h1>\r\n    }\r\n}\r\n\r\nexport default TodoTitle;","import \"./App.css\";\r\nimport React, {Component} from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoAddForm from \"./TodoAddForm\";\r\nimport TodoTitle from \"./TodoHeader\";\r\n\r\nclass Todoapp extends Component {\r\n  state = {\r\n    todoItems: {}\r\n  };\r\n\r\n  addToDoItems = item => {\r\n    const items = { ...this.state.todoItems };\r\n    console.log(items);\r\n    items[`item${Date.now()}`] = item;\r\n    this.setState({\r\n      todoItems: items\r\n    });\r\n  };\r\n\r\n  removeToDoItem = item => {\r\n    const todos = { ...this.state.todoItems };\r\n    delete todos[item];\r\n    this.setState({ todoItems: todos });\r\n  };\r\n\r\n  updateTodos = (key, updatedTodo) => {\r\n    const todos = { ...this.state.todoItems };\r\n    todos[key] = updatedTodo;\r\n    this.setState({ todoItems: todos });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TodoTitle />\r\n        <TodoAddForm addToDoItems={this.addToDoItems} />\r\n        <ul>\r\n          {Object.keys(this.state.todoItems).map(key => (\r\n            <TodoList\r\n              key={key}\r\n              index={key}\r\n              todoItems={this.state.todoItems[key]}\r\n              removeToDoItem={this.removeToDoItem}\r\n              updateTodos={this.updateTodos}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst Todo = () => {\r\n  return <Todoapp initItems/>;\r\n};\r\nexport default Todo;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Login from \"./login\";\r\nimport Todo from \"./todoapp\";\r\n\r\nfunction UserGreeting(props) {\r\n  return   (\r\n    <div>\r\n      <h1> Hi CGUer, please sign in.</h1>\r\n      <Login/>\r\n    </div>\r\n  )\r\n   \r\n}\r\nfunction GuestGreeting(props) {\r\n    return  (\r\n      <div>\r\n        <h1 color=\"red\"> Welcome back, CGUER!</h1>\r\n        <Todo/>\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction Greeting(props) {\r\n  const isLoggedIn = props.isLoggedIn;\r\n  if (isLoggedIn) {\r\n    return <GuestGreeting />;\r\n    \r\n  } else {\r\n    return <UserGreeting />;\r\n  }\r\n}\r\nReactDOM.render(\r\n    <Greeting isLoggedIn={false} />, \r\n    document.getElementById('root')\r\n);\r\nexport default Greeting;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Greeting from \"./greet\";\r\n\r\nfunction LoginButton(props) {\r\n  return (\r\n    <Button\r\n      onClick={props.onClick}\r\n      type=\"submit\"\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n    >\r\n      <Link color=\"inherit\">Sign In</Link>\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction LogoutButton(props) {\r\n  return (\r\n    <Button\r\n      onClick={props.onClick}\r\n      type=\"submit\"\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n    >\r\n      <Link color=\"inherit\">Logout</Link>\r\n    </Button>\r\n  );\r\n}\r\n\r\nclass LoginControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLoginClick() {\r\n    this.setState({ isLoggedIn: true });\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this.setState({ isLoggedIn: false });\r\n  }\r\n\r\n  render() {\r\n    const isLoggedIn = this.state.isLoggedIn;\r\n    let button = null;\r\n    if (isLoggedIn) {\r\n      button = <LogoutButton onClick={this.handleLogoutClick} />;\r\n    } else {\r\n      button = <LoginButton onClick={this.handleLoginClick} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Greeting isLoggedIn={isLoggedIn} />\r\n        {button}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginControl;\r\n","import React, { Component } from \"react\";\nimport LoginControl from \"./loginControl\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <section>\n          <LoginControl />\n        </section>\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}